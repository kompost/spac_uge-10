// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model User {
  id        String       @id @default(cuid())
  username  String       @unique
  password  String
  role      Role         @default(USER)
  chatrooms Chatroom[]
  friends   Friendship[] @relation("UserFriends1")
  friendOf  Friendship[] @relation("UserFriends2")
  Message   Message[]
}

model Friendship {
  user1   User   @relation("UserFriends1", fields: [user1Id], references: [id])
  user1Id String
  user2   User   @relation("UserFriends2", fields: [user2Id], references: [id])
  user2Id String

  @@id([user1Id, user2Id])
  @@unique([user1Id, user2Id])
}

model Chatroom {
  id       String    @id @default(cuid())
  name     String
  messages Message[]
  User     User?     @relation(fields: [userId], references: [id])
  userId   String?
}

model Message {
  id         String   @id @default(cuid())
  User       User     @relation(fields: [userId], references: [id])
  userId     String
  Chatroom   Chatroom @relation(fields: [chatroomId], references: [id])
  chatroomId String
  message    String

  createdAt DateTime @default(now())
}
